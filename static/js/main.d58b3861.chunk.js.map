{
    "version": 3,
    "sources": ["redux/blockchain/blockchainReducer.js", "redux/data/dataReducer.js", "redux/store.js", "redux/data/dataActions.js", "redux/blockchain/blockchainActions.js", "styles/globalStyles.js", "styles/opensea.png", "styles/etherscan.png", "styles/dog5.png", "styles/tosa.png", "styles/preview.png", "App.js", "reportWebVitals.js", "index.js"],
    "names": ["initialState", "loading", "account", "smartContract", "web3", "errorMsg", "blockchainReducer", "state", "action", "type", "payload", "totalSupply", "cost", "error", "dataReducer", "rootReducer", "combineReducers", "blockchain", "data", "middleware", "thunk", "composeEnhancers", "compose", "applyMiddleware", "store", "createStore", "fetchDataFailed", "fetchData", "dispatch", "getState", "methods", "call", "console", "log", "providerOptions", "walletconnect", "package", "WalletConnectProvider", "options", "infuraId", "walletlink", "WalletLink", "appName", "rpc", "chainId", "appLogoUrl", "darkMode", "web3Modal", "Web3Modal", "connectFailed", "updateAccount", "SpacerSmall", "styled", "div", "image", "SpacerMedium", "Container", "flex", "fd", "jc", "ai", "test", "TextDescription", "p", "StyledRoundButton", "button", "img", "a", "App", "useDispatch", "useSelector", "useState", "claimingNft", "setClaimingNft", "feedback", "setFeedback", "mintAmount", "setMintAmount", "CONTRACT_ADDRESS", "SCAN_LINK", "NETWORK", "NAME", "SYMBOL", "ID", "NFT_NAME", "MAX_SUPPLY", "WEI_COST", "DISPLAY_COST", "GAS_LIMIT", "MARKETPLACE", "MARKETPLACE_LINK", "SHOW_BACKGROUND", "CONFIG", "SET_CONFIG", "getData", "getConfig", "fetch", "headers", "Accept", "configResponse", "json", "config", "useEffect", "className", "href", "target", "xmlns", "x", "y", "width", "height", "viewBox", "d", "src", "Mintimg", "style", "textAlign", "color", "onClick", "e", "preventDefault", "connect", "provider", "abiResponse", "abi", "Web3EthContract", "setProvider", "Web3", "request", "method", "accounts", "SmartContractObj", "on", "window", "location", "reload", "lineHeight", "disabled", "newMintAmount", "decrementMintAmount", "incrementMintAmount", "gasLimit", "totalCostWei", "String", "totalGasLimit", "mint", "send", "to", "from", "value", "once", "err", "then", "receipt", "claimNFTs", "Homesec", "Opensealogo", "Etherscanlogo", "reportWebVitals", "onPerfEntry", "Function", "getCLS", "getFID", "getFCP", "getLCP", "getTTFB", "ReactDOM", "render", "document", "getElementById"],
    "mappings": "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",
    "file": "static/js/main.d58b3861.chunk.js",
    "sourcesContent": ["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n", "const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n", "import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n", "// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n", "// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport WalletLink from \"walletlink\";\r\nimport Web3Modal from \"web3modal\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst providerOptions = {\r\n\t  walletconnect: {\r\n\t\tpackage: WalletConnectProvider,\r\n\t\toptions: {\r\n\t\t  infuraId: \"8f287b37cc8e461f8b8123e8c9d54ae7\",\r\n\t\t}\r\n\t},\r\n  walletlink: {\r\n\t\tpackage: WalletLink, \r\n\t\toptions: {\r\n\t\t  appName: \"Proof Of Paper Hands NFT\", \r\n\t\t  infuraId: \"8f287b37cc8e461f8b8123e8c9d54ae7\",\r\n\t\t  rpc: \"https://mainnet.infura.io/v3/\", \r\n\t\t  chainId: 1, \r\n\t\t  appLogoUrl: null, \r\n\t\t  darkMode: true \r\n\t\t}\r\n\t  },\r\n};\r\n\r\nconst web3Modal = new Web3Modal({\r\n  // network: process.env.REACT_APP_modalNetwork, // optional\r\n  // cacheProvider: true, // optional\r\n  providerOptions // required\r\n});\r\n\r\n\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const provider = await web3Modal.connect();\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n      Web3EthContract.setProvider(provider);\r\n      let web3 = new Web3(provider);\r\n      try {\r\n        const accounts = await provider.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await provider.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          provider.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          provider.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n", "import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n", "export default __webpack_public_path__ + \"static/media/opensea.9db955c6.png\";", "export default __webpack_public_path__ + \"static/media/etherscan.55c19a2e.png\";", "export default __webpack_public_path__ + \"static/media/dog5.9ed6c261.png\";", "export default __webpack_public_path__ + \"static/media/tosa.49021b95.png\";", "export default __webpack_public_path__ + \"static/media/preview.38250971.png\";", "import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport styled from \"styled-components\";\r\nimport Opensealogo from \"./styles/opensea.png\"\r\nimport Etherscanlogo from \"./styles/etherscan.png\"\r\nimport \"./App.css\"\r\nimport Homesec from \"./styles/dog5.png\"\r\nimport Mintimg from \"./styles/tosa.png\"\r\nimport Upimg from \"./styles/preview.png\"\r\n\r\n\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  \r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 50px 101px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dotted var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 20%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 5) {\r\n      newMintAmount = 5;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n\r\n    \r\n    <><div className=\"firework\"></div><div className=\"firework\"></div><div className=\"firework\">\r\n      </div><div className=\"hero\">\r\n      <div className=\"banner\">\r\n        {/* <img src={Upimg} /> */}\r\n        <h1>TOSA INU NFT MINT</h1>\r\n        <p>The limited supply of 100 unique “TOSA INU NFT’s offer two special utilities for our early investors</p>\r\n        <div className=\"socialnet\">\r\n          <l1>\r\n            <a href=\"https://t.me/TosaInu_erc20\" target=\"_blank\"><svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n              width=\"40\" height=\"40\"\r\n              viewBox=\"0 0 64 64\">\r\n              <path d=\"M 32 3 C 16.01 3 3 16.009 3 32 C 3 47.991 16.01 61 32 61 C 47.99 61 61 47.991 61 32 C 61 16.009 47.99 3 32 3 z M 32 5 C 46.888 5 59 17.112 59 32 C 59 46.888 46.888 59 32 59 C 17.112 59 5 46.888 5 32 C 5 17.112 17.112 5 32 5 z M 32 9 C 19.317 9 9 19.318 9 32 C 9 32.552 9.447 33 10 33 C 10.553 33 11 32.552 11 32 C 11 20.42 20.421 11 32 11 C 43.579 11 53 20.42 53 32 C 53 43.58 43.579 53 32 53 C 31.447 53 31 53.448 31 54 C 31 54.552 31.447 55 32 55 C 44.683 55 55 44.682 55 32 C 55 19.318 44.683 9 32 9 z M 41.367188 20.025391 C 40.982813 19.987891 40.561266 20.05125 40.134766 20.21875 C 39.398766 20.50975 19.395375 28.943344 18.609375 29.277344 C 17.787375 29.557344 16.877719 30.263078 17.011719 31.330078 C 17.163719 32.542078 18.429891 33.024078 18.587891 33.080078 L 23.462891 34.722656 C 23.871891 36.063656 24.992906 39.735641 25.253906 40.556641 C 25.383906 40.969641 25.713609 42.008187 26.474609 42.242188 C 27.056609 42.453188 27.633484 42.252172 28.021484 41.951172 L 30.869141 39.355469 L 35.605469 42.986328 L 35.814453 43.109375 C 36.245453 43.297375 36.630938 43.365234 36.960938 43.365234 C 37.312938 43.365234 37.602312 43.288219 37.820312 43.199219 C 38.729312 42.826219 39.093812 41.972953 39.132812 41.876953 L 42.900391 22.658203 C 43.176391 21.430203 42.767 20.7725 42.375 20.4375 C 42.099 20.202 41.751562 20.062891 41.367188 20.025391 z M 40.982422 22.039062 C 40.975422 22.096063 40.964312 22.165047 40.945312 22.248047 L 37.251953 41.173828 C 37.214953 41.226828 37.146453 41.315609 37.064453 41.349609 C 36.965453 41.388609 36.823891 41.356406 36.712891 41.316406 L 30.757812 36.748047 L 27.185547 40.011719 L 27.939453 35.214844 C 27.939453 35.214844 37.19575 26.586844 37.59375 26.214844 C 37.99175 25.843844 37.859375 25.763672 37.859375 25.763672 C 37.886375 25.312672 37.257812 25.634766 37.257812 25.634766 L 25.080078 33.175781 L 25.074219 33.154297 L 19.253906 31.195312 C 19.244906 31.191312 19.234609 31.187594 19.224609 31.183594 C 19.256609 31.169594 19.289266 31.156531 19.322266 31.144531 C 26.517266 28.110531 40.270187 22.314125 40.867188 22.078125 C 40.908187 22.061125 40.947422 22.049063 40.982422 22.039062 z M 12.003906 37.035156 C 11.874734 37.021094 11.739672 37.031766 11.607422 37.072266 L 9.6914062 37.646484 C 9.1624063 37.805484 8.8634844 38.361625 9.0214844 38.890625 C 9.1514844 39.324625 9.5475156 39.605469 9.9785156 39.605469 C 10.072516 39.605469 10.169625 39.5915 10.265625 39.5625 L 12.181641 38.988281 C 12.710641 38.829281 13.011516 38.270187 12.853516 37.742188 C 12.735016 37.346188 12.391422 37.077344 12.003906 37.035156 z M 13.828125 41.761719 C 13.699656 41.779719 13.573078 41.823531 13.455078 41.894531 L 11.738281 42.921875 C 11.263281 43.205875 11.109578 43.818969 11.392578 44.292969 C 11.579578 44.605969 11.910953 44.779297 12.251953 44.779297 C 12.426953 44.779297 12.603672 44.735672 12.763672 44.638672 L 14.480469 43.611328 C 14.955469 43.327328 15.109172 42.714234 14.826172 42.240234 C 14.613172 41.884734 14.213531 41.707719 13.828125 41.761719 z M 17.134766 45.832031 C 16.879016 45.831531 16.623234 45.927547 16.427734 46.123047 L 15.011719 47.537109 C 14.619719 47.927109 14.619766 48.560172 15.009766 48.951172 C 15.204766 49.147172 15.46175 49.244141 15.71875 49.244141 C 15.97475 49.244141 16.228828 49.147125 16.423828 48.953125 L 17.839844 47.539062 C 18.231844 47.149063 18.231797 46.517953 17.841797 46.126953 C 17.646297 45.931453 17.390516 45.832531 17.134766 45.832031 z M 21.34375 49.017578 C 20.957781 48.962594 20.558703 49.136688 20.345703 49.492188 L 19.316406 51.207031 C 19.032406 51.681031 19.184203 52.294125 19.658203 52.578125 C 19.819203 52.675125 19.997828 52.722656 20.173828 52.722656 C 20.513828 52.722656 20.84425 52.548328 21.03125 52.236328 L 22.060547 50.523438 C 22.344547 50.049437 22.19275 49.434391 21.71875 49.150391 C 21.60025 49.079141 21.472406 49.035906 21.34375 49.017578 z M 25.816406 51.097656 C 25.428703 51.139422 25.086047 51.406734 24.966797 51.802734 L 24.388672 53.716797 C 24.228672 54.245797 24.528641 54.804844 25.056641 54.964844 C 25.153641 54.993844 25.249703 55.007812 25.345703 55.007812 C 25.774703 55.007813 26.172734 54.728875 26.302734 54.296875 L 26.880859 52.380859 C 27.040859 51.851859 26.740891 51.294766 26.212891 51.134766 C 26.080391 51.095016 25.945641 51.083734 25.816406 51.097656 z\"></path>\r\n            </svg>\r\n            </a>\r\n          </l1>\r\n          <l1>\r\n            <a href=\"https://twitter.com/TosaInu_Erc20\" target=\"_blank\"><svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n              width=\"40\" height=\"40\"\r\n              viewBox=\"0 0 100 100\">\r\n              <path d=\"M 64.5 16 C 54.8466 16 47 23.8466 47 33.5 C 47 34.612975 47.239051 35.649481 47.441406 36.697266 C 25.881358 34.793239 15.450335 21.403751 14.001953 19.412109 A 1.0001 1.0001 0 0 0 12.326172 19.5 C 10.830125 22.096365 10 25.327371 10 28.5 C 10 33.68572 12.466385 38.537405 16.300781 41.707031 C 15.200572 41.527267 14.28279 41.289576 13.566406 41.050781 C 12.161275 40.582404 11.554687 40.167969 11.554688 40.167969 A 1.0001 1.0001 0 0 0 10 41 C 10 48.238221 14.566882 54.385889 20.953125 56.841797 C 20.622271 56.859584 20.337443 57 20 57 C 19.147392 57 17.845018 56.92449 17.0625 56.808594 A 1.0001 1.0001 0 0 0 15.992188 58.179688 L 16.076172 58.382812 A 1.0001 1.0001 0 0 0 16.078125 58.388672 C 18.616781 64.391466 24.800144 68.552058 31.517578 69.582031 C 26.297103 73.538616 19.508644 76 12.5 76 L 11 76 A 1.0001 1.0001 0 0 0 10.445312 77.832031 C 16.663396 81.97742 24.952062 84 33.5 84 C 60.274418 84 82 62.274418 82 35.5 A 1.0001 1.0001 0 0 0 82 35.490234 C 82 35.490234 81.993998 34.87894 81.986328 34.240234 C 81.981728 33.851303 81.976826 33.639764 81.972656 33.361328 C 86.86431 30.439635 89.800781 26.599609 89.800781 26.599609 A 1.0001 1.0001 0 0 0 88.71875 25.041016 C 88.71875 25.041016 85.486778 25.821369 82.072266 26.207031 C 86.054307 22.877916 87.449219 19.316406 87.449219 19.316406 A 1.0001 1.0001 0 0 0 86.021484 18.121094 C 86.021484 18.121094 81.075033 20.716475 76.613281 20.943359 C 73.467486 17.908115 69.21376 16 64.5 16 z M 64.5 18 C 68.856381 18 72.776277 19.797639 75.59375 22.6875 A 1.0001 1.0001 0 0 0 76.332031 22.988281 C 79.465469 22.913051 82.20469 21.973629 84.257812 21.107422 C 83.286248 22.546273 81.678701 24.397531 79.082031 26.076172 A 1.0001 1.0001 0 0 0 78.708984 27.314453 C 78.761294 27.434385 78.819031 27.620382 78.912109 27.857422 A 1.0001 1.0001 0 0 0 79.865234 28.490234 C 82.084306 28.441124 84.331582 28.072004 86.091797 27.712891 C 84.765988 29.00661 82.862586 30.620803 80.474609 31.966797 A 1.0001 1.0001 0 0 0 79.966797 32.878906 C 79.966799 32.878961 79.978718 33.626627 79.986328 34.263672 C 79.993944 34.900716 80 35.509766 80 35.509766 C 79.994637 61.198775 59.19027 82 33.5 82 C 26.599599 82 19.989658 80.52774 14.599609 77.806641 C 22.152358 77.330627 29.387787 74.464381 34.666016 69.746094 A 1.0001 1.0001 0 0 0 34.027344 68 C 27.717528 67.823398 21.64961 64.083733 18.755859 58.917969 C 19.189528 58.939162 19.629741 59 20 59 C 22.215848 59 24.339214 58.651386 26.333984 57.943359 A 1.0001 1.0001 0 0 0 26.060547 56.001953 C 18.746713 55.552973 12.927418 49.829862 12.154297 42.599609 C 12.510284 42.756951 12.434169 42.782744 12.933594 42.949219 C 14.528462 43.480842 16.888889 44 20 44 A 1.0001 1.0001 0 0 0 20.427734 42.095703 C 15.467541 39.75499 12 34.266873 12 28.5 C 12 26.20086 12.611205 23.910494 13.501953 21.892578 C 16.60185 25.774302 27.420269 37.485392 48.537109 38.863281 A 1.0001 1.0001 0 0 0 49.566406 37.599609 C 49.20555 36.284657 49 34.916686 49 33.5 C 49 24.9274 55.9274 18 64.5 18 z M 64.5 21 C 60.811943 21 57.496914 22.617858 55.208984 25.166016 A 0.50005 0.50005 0 1 0 55.953125 25.833984 C 58.061196 23.486142 61.104057 22 64.5 22 C 67.36354 22 70.04768 23.047904 72.166016 24.955078 A 0.50005 0.50005 0 1 0 72.833984 24.212891 C 70.53832 22.146065 67.60846 21 64.5 21 z M 53.617188 27.994141 A 0.50005 0.50005 0 0 0 53.150391 28.291016 C 52.698066 29.272789 52.372841 30.319587 52.1875 31.416016 A 0.50026397 0.50026397 0 1 0 53.173828 31.583984 C 53.344487 30.574413 53.642918 29.611211 54.058594 28.708984 A 0.50005 0.50005 0 0 0 53.617188 27.994141 z M 52.492188 32.992188 A 0.50005 0.50005 0 0 0 52 33.5 C 52 33.87054 52.044266 34.220554 52.072266 34.542969 A 0.50005 0.50005 0 1 0 53.068359 34.457031 C 53.03835 34.111448 53 33.78746 53 33.5 A 0.50005 0.50005 0 0 0 52.492188 32.992188 z M 72.548828 52.994141 A 0.50005 0.50005 0 0 0 72.083984 53.289062 C 67.250061 63.728797 58.30392 71.885733 47.335938 75.673828 A 0.5003204 0.5003204 0 1 0 47.664062 76.619141 C 58.89208 72.741235 68.042158 64.397204 72.990234 53.710938 A 0.50005 0.50005 0 0 0 72.548828 52.994141 z M 41.490234 77.240234 A 0.50005 0.50005 0 0 0 41.40625 77.25 C 39.79001 77.556256 38.140748 77.768095 36.464844 77.884766 A 0.50025983 0.50025983 0 1 0 36.535156 78.882812 C 38.249252 78.763484 39.93799 78.546166 41.59375 78.232422 A 0.50005 0.50005 0 0 0 41.490234 77.240234 z M 32.509766 77.970703 A 0.50009537 0.50009537 0 1 0 32.490234 78.970703 C 32.810171 78.977388 33.141239 79 33.5 79 A 0.50005 0.50005 0 1 0 33.5 78 C 33.184761 78 32.859827 77.978023 32.509766 77.970703 z\"></path>\r\n            </svg>\r\n            </a>\r\n          </l1>\r\n        </div>\r\n      </div>\r\n      <div className=\"home\">\r\n        <div className=\"homebanner\">\r\n          <div className=\"mintsect\">\r\n            <div className=\"mints\">\r\n              <div className=\"mint-image\">\r\n                <img src={Mintimg} />\r\n                <h2 className=\"totalsup\">{data.totalSupply} / {CONFIG.MAX_SUPPLY}</h2>\r\n              </div>\r\n              <div className=\"mint-top\">\r\n                <h1>TOSA INU NFT</h1>\r\n                <h3>Price per NFT</h3>\r\n                <h2>0.2 ETH + Gas</h2>\r\n                {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      } }\r\n                    >\r\n                      CONNECT\r\n                    </button>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        } }\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerMedium />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {mintAmount}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        } }\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <button\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        } }\r\n                      >\r\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\r\n                      </button>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"nftbanner\">\r\n          <img src={Homesec} />\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"opentext\">\r\n        <h1>View Collection on</h1>\r\n      </div>\r\n      <div className=\"opensea\">\r\n        <a href=\"https://opensea.io/collection/tosainugold\" target=\"blank\">\r\n          <img className=\"openlogo\" src={Opensealogo} />\r\n        </a>\r\n        <a href=\"https://etherscan.io/address/0xDDa02A9fcA2ef994F7ebe523995dE0a20Ab0C846\" target=\"blank\">\r\n          <img className=\"openlogo2\" src={Etherscanlogo} />\r\n        </a>\r\n\r\n      </div>\r\n      <div className=\"title2\">\r\n        Please make sure you are connected to the right network (\r\n        {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\r\n        Once you make the purchase, you cannot undo this action.\r\n      </div>\r\n\r\n      <div className=\"title2\">\r\n        We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\r\n        successfully mint your NFT. We recommend that you don't lower the\r\n        gas limit.\r\n      </div>\r\n    </div></>\r\n\r\n    \r\n \r\n    \r\n       \r\n  );\r\n}\r\n\r\nexport default App;", "const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n", "import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],
    "sourceRoot": ""
}